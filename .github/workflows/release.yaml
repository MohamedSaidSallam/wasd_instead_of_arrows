---
name: Release

on:
  push:
    tags:
      - "v*.*.*.*"

jobs:
  build_and_release:
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download AutoHotkey_2 and Ahk2Exe
        shell: pwsh
        run: |
          $cwd = (Get-Item .).FullName;

          Invoke-WebRequest "https://github.com/AutoHotkey/AutoHotkey/releases/download/v2.0.19/AutoHotkey_2.0.19.zip" -OutFile "$cwd\autohotkey.zip";
          Expand-Archive "$cwd\autohotkey.zip" -DestinationPath ".\.autohotkey\";
          Remove-Item -Path "$cwd\autohotkey.zip" -Force;

          Invoke-WebRequest "https://github.com/AutoHotkey/Ahk2Exe/releases/download/Ahk2Exe1.1.37.02a0a/Ahk2Exe1.1.37.02a0.zip" -OutFile "$cwd\Ahk2Exe.zip";
          Expand-Archive "$cwd\Ahk2Exe.zip" -DestinationPath ".\.ahk2exe\";
          Remove-Item -Path "$cwd\Ahk2Exe.zip" -Force;

      - name: Run Ahk2Exe
        shell: pwsh
        run: |
          $cwd = (Get-Item .).FullName;

          $command = "$cwd/.ahk2exe/Ahk2Exe.exe /in wasd_instead_of_arrows.ahk /out wasd_instead_of_arrows_${{ github.ref_name }}.exe /icon icon.ico /base $cwd/.autohotkey/AutoHotkey32.exe /silent  | Write-Output"
          Invoke-Expression $command

      - name: Release
        uses: softprops/action-gh-release@v1
        id: release
        with:
          files: wasd_instead_of_arrows_${{ github.ref_name }}.exe

      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          url: ${{ steps.release.outputs.url }}
          description: |
            New Version (`${{ github.ref_name }}`).
            [Check out the it out!](${{ steps.release.outputs.url }})
